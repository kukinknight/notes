关注：
1.是否修改原数组


https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/at

Array 数组
- at(): 返回指定位置的字符。与 str.charAt() 方法类似，但可以处理 Unicode 编码点大于 0xFFFF 的字符。
- concat(): 方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组；此方法可以使用任意数量的数组参数。
- copyWithin(): 从数组的指定位置拷贝元素到数组的另一个指定位置中，覆盖原有的元素，并返回修改后的数组。
- entries(): 返回一个新的 Array Iterator 对象，该对象包含数组中每个索引的键值对。
- every(): 检测数组中的所有元素是否都符合指定条件，如果所有元素都符合条件，则返回 true，否则返回 false。
- fill(): 用一个固定值填充数组中从起始索引到终止索引内的全部元素，并返回修改后的数组。
- filter(): 创建一个新数组，其中包含所有通过指定函数测试的元素。
- find(): 返回数组中符合条件的第一个元素的值，如果没有符合条件的元素，则返回 undefined。
- findIndex(): 返回数组中符合条件的第一个元素的索引，如果没有符合条件的元素，则返回 -1。
- findLast(): 返回数组中符合条件的最后一个元素的值，如果没有符合条件的元素，则返回 undefined。
- findLastIndex(): 返回数组中符合条件的最后一个元素的索引，如果没有符合条件的元素，则返回 -1。
- flat(): 将嵌套的数组变为一维数组，并返回新的数组。
- flatMap(): 对数组中的每个元素执行一个指定的函数，并返回一个新的数组，该数组是由每个函数返回的结果组成的。
- forEach(): 遍历数组中的每个元素，并执行指定的函数。
- includes(): 判断数组是否包含指定的元素，如果包含则返回 true，否则返回 false。
- indexOf(): 返回数组中指定元素的第一个索引，如果不存在则返回 -1。
- join(): 将数组中的所有元素转化为字符串并连接起来，返回一个新的字符串。
- keys(): 返回一个新的 Array Iterator 对象，该对象包含数组中每个索引的键。
- lastIndexOf(): 返回数组中指定元素的最后一个索引，如果不存在则返回 -1。
- map(): 创建一个新数组，其中包含对原数组中的每个元素执行指定函数的结果。
- pop(): 删除数组的最后一个元素并返回该元素。
- push(): 将一个或多个元素添加到数组的末尾，并返回修改后的数组的长度。
- reduce(): 对数组中的所有元素依次执行指定的函数，返回一个累加的结果。
- reduceRight(): 对数组中的所有元素依次执行指定的函数（从右到左），返回一个累加的结果。
- reverse(): 反转数组中元素的顺序，并返回修改后的数组。
- shift(): 删除数组的第一个元素并返回该元素。
- slice(): 返回一个新数组，该数组包含原始数组中指定范围内的元素。
- some(): 检测数组中是否至少有一个元素符合指定条件，如果有，则返回 true，否则返回 false。
- sort(): 对数组中的元素进行排序，并返回排序后的数组。
- splice(): 删除原数组中的一部分元素，并用新元素替换它们。
- toLocaleString(): 返回数组的本地化字符串表示。
- toString(): 将数组转化为字符串并返回该字符串。
- unshift(): 将一个或多个元素添加到数组的开头，并返回修改后的数组的长度。
- values(): 返回一个新的 Array Iterator 对象，该对象包含数组中每个索引的值。



substr():  从字符串中提取提取指定长度的字符

语法：开始提取字符的位置。如果为负值，则被看作 strLength + start，其中 strLength 为字符串的长度（例如，如果 start 为 -3，则被看作 strLength + (-3)）。
例子：var str = "abcdefghij";

console.log("(1,2): "    + str.substr(1,2));   // (1,2): bc

substring()  
语法：str.substring(indexStart[, indexEnd])
例子：var anyString = "Mozilla";

// 输出 "Moz"
console.log(anyString.substring(0,3));


